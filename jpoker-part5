
    //
    // cards (table plugin helper)
    //
    jpoker.plugins.cards = {
        update: function(cards, prefix, id) {
            jpoker.plugins.cards.update_value(cards, prefix, id);
            jpoker.plugins.cards.update_visibility(cards, prefix, id);
        },
        update_value: function(cards, prefix, id) {
            for(var i = 0; i < cards.length; i++) {
                var card = cards[i];
                var element = $('#' + prefix + i + id);
                element.removeClass().addClass('jpoker_card jpoker_ptable_' + prefix + i);
                if(card !== null) {
                    var card_image = 'back';
                    if(card != 255) {
                        card_image = jpoker.cards.card2string[card & 0x3F];
                    }
                    element.addClass('jpoker_card_' + card_image);
                }
            }
        },
        update_visibility: function(cards, prefix, id) {
            for(var i = 0; i < cards.length; i++) {
                var card = cards[i];
                var element = $('#' + prefix + i + id);
                if(card !== null) {
                    element.show();
                } else {
                    element.hide();
                }
            }
        }
    };
    //
    // chips (table plugin helper)
    //
    jpoker.plugins.chips = {
        template: '<div class=\'jpoker_chips_image\'></div><div class=\'jpoker_chips_amount\'></div>',
        update: function(chips, id) {
            var element = $(id);
            if(chips > 0) {
                element.show();
                $('.jpoker_chips_amount', element).text(jpoker.chips.SHORT(chips));
                element.attr('title', jpoker.chips.LONG(chips));
            } else {
                element.hide();
            }
        }
    };

    $.fn.getPosition = function() {
        var visible = $(this).is(':visible');
        $(this).show();
        var position = $(this).position();
        if (visible === false) {
            $(this).hide();
        }
        return position;
    };

    $.fn.getOffset = function() {
        var visible = $(this).is(':visible');
        $(this).show();
        var position = $(this).offset();
        if (visible === false) {
            $(this).hide();
        }
        return position;
    };

    $.fn.moveFrom = function(from, options) {
        var positionFrom = $(from).getPosition();
        var positionTo = $(this).getPosition();
        $(this).css(positionFrom).animate(positionTo, options);
        return this;
    };

    //
    // raise (SelfPlayer plugin helper)
    //
    jpoker.plugins.raise = {
        template: '<div class=\'jpoker_raise_label\'>{raise_label}</div><div class=\'jpoker_raise_bound jpoker_raise_min\'>{raise_min}</div><div class=\'jpoker_raise_current\' title=\'{raise_current_title}\'>{raise_current}</div><div class=\'jpoker_raise_bound jpoker_raise_max\'>{raise_max}</div><div class=\'ui-slider-1\'><div class=\'ui-slider-handle\'></div></div>',
        getHTML: function(betLimit) {
            var t = this.template;
            return t.supplant({raise_label: _("Raise"),
                                                raise_min: jpoker.chips.SHORT(betLimit.min),
                                                raise_current_title: Math.floor(betLimit.min*100),
                                                raise_current: jpoker.chips.SHORT(betLimit.min),
                                                raise_max: jpoker.chips.SHORT(betLimit.max)});
        }
    };

    //
    // userInfo
    //
    jpoker.plugins.userInfo = function(url, options) {

        var userInfo = jpoker.plugins.userInfo;
        var opts = $.extend({}, userInfo.defaults, options);
        var server = jpoker.url2server({ url: url });

        return this.each(function() {
                var $this = $(this);

                var id = jpoker.uid();

                $this.append('<div class=\'jpoker_widget jpoker_user_info\' id=\'' + id + '\'></div>');

                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet && packet.type == 'PacketPokerPersonalInfo') {
                            $(element).html(userInfo.getHTML(packet, url));
                            $('.jpoker_user_info_submit', element).click(function() {
                                    $('.jpoker_user_info_feedback', element).text(_("Updating..."));
                                    var info = {};
                                    $('input[type=text]', element).each(function() {
                                            info[$(this).attr('name')] = $(this).attr('value');
                                        });
                                    $('input[type=password]', element).each(function() {
                                            info[$(this).attr('name')] = $(this).attr('value');
                                        });
                                    server.setPersonalInfo(info);
                                });
                            if (packet.set_account) {
                                $('.jpoker_user_info_feedback', element).text(_("Updated"));
                            }
                            var avatar_url = server.urls.avatar+'/'+server.serial;
                            var avatar_preview = $('.jpoker_user_info_avatar_preview', element);
                            avatar_preview.css({
                                    'background-image': 'url("' + avatar_url + '")',
                                    'display': 'block'
                                    });
                            $('.jpoker_user_info_avatar_upload', element).ajaxForm({
                                    beforeSubmit: function() {
                                        $('.jpoker_user_info_avatar_upload_feedback', element).text(_("Uploading..."));
                                    },
                                    success: function(data) {
                                        if (data.search('image uploaded') != -1) {
                                            $('.jpoker_user_info_avatar_upload_feedback', element).text(_("Uploaded"));
                                            $('.jpoker_user_info_avatar_preview', element).replaceWith(avatar_preview.clone().css({'background-image': 'url("' + avatar_url + '")',
                                  'display': 'block'}));
                                        } else {
                                            $('.jpoker_user_info_avatar_upload_feedback', element).text(_("Uploading failed") + ': ' + data);
                                        }
                                    }
                                });
                            userInfo.callback.display_done(element);
                        }
                        return true;
                    } else {
                        return false;
                    }
                };

                server.registerUpdate(updated, null, 'userInfo ' + id);
                server.getPersonalInfo();

                return this;
            });
    };

    jpoker.plugins.userInfo.defaults = $.extend({
        }, jpoker.defaults);

    jpoker.plugins.userInfo.getHTML = function(packet, url) {
        var t = this.templates;
        var html = [];
        html.push(t.info.supplant($.extend({
                    'name_title': _("Login name"),
                    'password_title': _("Password"),
                    'password_confirmation_title': _("Password confirmation"),
                    'email_title': _("Email"),
                    'phone_title' : _("Phone Number"),
                    'firstname_title': _("First name"),
                    'lastname_title': _("Last name"),
                    'addr_street_title' : _("Street"),
                    'addr_street2_title' : _("Street (continue)"),
                    'addr_zip_title' : _("Zip code"),
                    'addr_town_title' : _("Town"),
                    'addr_state_title' : _("State"),
                    'addr_country_title' : _("Country"),
                    'gender_title' : _("Gender"),
                    'birthdate_title' : _("Birthdate"),
                    'submit_title': _("Update personal info")
                }, packet)));
        var server = jpoker.getServer(url);
        html.push(t.avatar.supplant({'upload_url' : server.urls.upload,
                                     'upload': _("Upload avatar")}));
        return html.join('\n');
    };

    jpoker.plugins.userInfo.templates = {
        info: '<table><tr><td>{name_title}</td><td><div class=\'jpoker_user_info_name\'>{name}</div></input></td></tr><tr><td>{password_title}</td><td><input type=\'password\' name=\'password\' value=\'{password}\'></input></td></tr><tr><td>{password_confirmation_title}</td><td><input type=\'password\' name=\'password_confirmation\'></input></td></tr><tr><td>{email_title}</td><td><input type=\'text\' name=\'email\' value=\'{email}\'></input></td></tr><tr><td>{phone_title}</td><td><input type=\'text\' name=\'phone\' value=\'{phone}\'></input></td></tr><tr><td>{firstname_title}</td><td><input type=\'text\' name=\'firstname\' value=\'{firstname}\'></input></td></tr><tr><td>{lastname_title}</td><td><input type=\'text\' name=\'lastname\' value=\'{lastname}\'></input></td></tr><tr><td>{addr_street_title}</td><td><input type=\'text\' name=\'addr_street\' value=\'{addr_street}\'></input></td></tr><tr><td>{addr_street2_title}</td><td><input type=\'text\' name=\'addr_street2\' value=\'{addr_street2}\'></input></td></tr><tr><td>{addr_zip_title}</td><td><input type=\'text\' name=\'addr_zip\' value=\'{addr_zip}\'></input></td></tr><tr><td>{addr_town_title}</td><td><input type=\'text\' name=\'addr_town\' value=\'{addr_town}\'></input></td></tr><tr><td>{addr_state_title}</td><td><input type=\'text\' name=\'addr_state\' value=\'{addr_state}\'></input></td></tr><tr><td>{addr_country_title}</td><td><input type=\'text\' name=\'addr_country\' value=\'{addr_country}\'></input></td></tr><tr><td>{gender_title}</td><td><input type=\'text\' name=\'gender\' value=\'{gender}\'></input></td></tr><tr><td>{birthdate_title}</td><td><input type=\'text\' name=\'birthdate\' value=\'{birthdate}\'></input></td></tr><tr><td><input class=\'jpoker_user_info_submit\' type=\'submit\' value=\'{submit_title}\'></input></td><td><div class=\'jpoker_user_info_feedback\'></div></td></tr></table>',
        avatar: '<div class=\'jpoker_user_info_avatar_preview\'></div><form class=\'jpoker_user_info_avatar_upload\' action=\'{upload_url}\' method=\'post\' enctype=\'multipart/form-data\'><input type=\'file\' name=\'filename\'></input><input type=\'submit\' value=\'{upload}\'></input></form><div class=\'jpoker_user_info_avatar_upload_feedback\'></div>'
    };

    jpoker.plugins.userInfo.callback = {
        display_done: function(element) {
        }
    };

    //
    // places
    //
    jpoker.plugins.places = function(url, options) {

        var places = jpoker.plugins.places;
        var opts = $.extend({}, places.defaults, options);
        var server = jpoker.url2server({ url: url });

        var player_serial = server.serial;
        if (opts.serial !== undefined) {
            player_serial = parseInt(opts.serial, 10);
        }

        return this.each(function() {
                var $this = $(this);

                var id = jpoker.uid();

                $this.append('<div class=\'jpoker_widget jpoker_places\' id=\'' + id + '\'></div>');

                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet && packet.type == 'PacketPokerPlayerPlaces') {
                            $(element).html(places.getHTML(packet, opts.table_link_pattern, opts.tourney_link_pattern));
                            if(opts.table_link_pattern === undefined) {
                                $.each(packet.tables, function(i, table) {
                                        $('#' + table, element).click(function() {
                                                var server = jpoker.getServer(url);
                                                if(server) {
                                                    server.tableJoin(table);
                                                }
                                            });
                                    });
                            }
                            if(opts.tourney_link_pattern === undefined) {
                                $.each(packet.tourneys, function(i, tourney) {
                                        $('#' + tourney, element).click(function() {
                                                var server = jpoker.getServer(url);
                                                if(server) {
                                                    var packet = {game_id: tourney, name: ''};
                                                    server.placeTourneyRowClick(server, packet);
                                                }
                                            });
                                    });
                            }
                            places.callback.display_done(element);
                        }
                        return true;
                    } else {
                        return false;
                    }
                };

                server.registerUpdate(updated, null, 'places ' + id);
                server.getPlayerPlaces(player_serial);

                return this;
            });
    };

    jpoker.plugins.places.defaults = $.extend({
        }, jpoker.defaults);

    jpoker.plugins.places.getHTML = function(packet, table_link_pattern, tourney_link_pattern) {
        var t = this.templates;
        var html = [];
        html.push(t.tables.header.supplant({table_title: _("Tables")}));
        $.each(packet.tables, function(i, table) {
                var game_id = table;
                if (table_link_pattern) {
                    table = t.tables.link.supplant({link: table_link_pattern.supplant({game_id: game_id}), name: game_id});
                }
                html.push(t.tables.rows.supplant({id: game_id,
                                table: table}));
            });
        html.push(t.tables.footer);

        html.push(t.tourneys.header.supplant({tourney_title: _("Tourneys")}));
        $.each(packet.tourneys, function(i, tourney) {
                var tourney_serial = tourney;
                if (tourney_link_pattern) {
                    tourney = t.tourneys.link.supplant({link: tourney_link_pattern.supplant({tourney_serial: tourney_serial}), name: tourney_serial});
                }
                html.push(t.tourneys.rows.supplant({id: tourney_serial,
                                tourney: tourney}));
            });
        html.push(t.tourneys.footer);
        return html.join('\n');
    };

    jpoker.plugins.places.templates = {
        tables : {
            header : '<div class=\'jpoker_places_tables\'><table><thead><tr><th>{table_title}</th></tr></thead><tbody>',
            rows : '<tr class=\'jpoker_places_table\' id={id}><td>{table}</td></tr>',
            footer : '</tbody></table></div>',
            link: '<a href=\'{link}\'>{name}</a>'
        },
        tourneys : {
            header : '<div class=\'jpoker_places_tourneys\'><table><thead><tr><th>{tourney_title}</th></tr></thead><tbody>',
            rows : '<tr class=\'jpoker_places_tourney\' id={id}><td>{tourney}</td></tr>',
            footer : '</tbody></table></div>',
            link: '<a href=\'{link}\'>{name}</a>'
        }
    };

    jpoker.plugins.places.callback = {
        display_done: function(element) {
        }
    };

    //
    // playerLookup
    //
    jpoker.plugins.playerLookup = function(url, options) {

        var playerLookup = jpoker.plugins.playerLookup;
        var opts = $.extend({}, playerLookup.defaults, options);
        var server = jpoker.url2server({ url: url });

        return this.each(function() {
                var $this = $(this);

                var id = jpoker.uid();
                var player_lookup_element = $('<div class=\'jpoker_widget jpoker_player_lookup\' id=\'' + id + '\'></div>').appendTo($this);

                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet) {
                            if (packet.type == 'PacketPokerPlayerPlaces') {
                                $('.jpoker_player_lookup_result', element).html(playerLookup.getHTML(packet, opts.table_link_pattern, opts.tourney_link_pattern));
                                if (opts.table_link_pattern === undefined) {
                                    $.each(packet.tables, function(i, table) {
                                            $('#' + table, element).click(function() {
                                                    var server = jpoker.getServer(url);
                                                    if(server) {
                                                        server.tableJoin(table);
                                                    }
                                                });
                                        });
                                }
                                if (opts.tourney_link_pattern === undefined) {
                                    $.each(packet.tourneys, function(i, tourney) {
                                            $('#' + tourney, element).click(function() {
                                                    var server = jpoker.getServer(url);
                                                    if(server) {
                                                        var packet = {game_id: tourney, name: ''};
                                                        server.placeTourneyRowClick(server, packet);
                                                    }
                                                });
                                        });
                                }
                                $('.jpoker_player_lookup_challenge a', element).click(function() {
                                        var server = jpoker.getServer(url);
                                        if(server) {
                                            if(server.loggedIn()) {
                                                server.placeChallengeClick(server, packet.serial);
                                            } else {
                                                jpoker.dialog(_("you must login before you can challenge the player"));
                                            }
                                        }
                                    });
                                playerLookup.callback.display_done(element);
                            } else if ((packet.type == 'PacketError') && (packet.other_type == jpoker.packetName2Type.PACKET_POKER_PLAYER_PLACES)) {
                                playerLookup.callback.error(packet);
                            }
                        }
                        return true;
                    } else {
                        return false;
                    }
                };

                server.registerUpdate(updated, null, 'playerLookup ' + id);

                $(player_lookup_element).html(playerLookup.getHTMLForm());
                $('.jpoker_player_lookup_submit', player_lookup_element).click(function() {
                        $('.jpoker_player_lookup_result', player_lookup_element).empty();
                        server.getPlayerPlacesByName($('.jpoker_player_lookup_input', player_lookup_element).val(), options);
                    });
                return this;
            });
    };

    jpoker.plugins.playerLookup.defaults = $.extend({
        }, jpoker.defaults);

    jpoker.plugins.playerLookup.getHTML = function(packet, table_link_pattern, tourney_link_pattern) {
        var t = this.templates;
        var html = [];
        html.push(t.tables.header.supplant({table_title: _("Tables")}));
        $.each(packet.tables, function(i, table) {
                var game_id = table;
                if (table_link_pattern) {
                    table = t.tables.link.supplant({link: table_link_pattern.supplant({game_id: game_id}), name: game_id});
                }
                html.push(t.tables.rows.supplant({id: game_id,
                                table: table}));
            });
        html.push(t.tables.footer);

        html.push(t.tourneys.header.supplant({tourney_title: _("Tourneys")}));
        $.each(packet.tourneys, function(i, tourney) {
                var tourney_serial = tourney;
                if (tourney_link_pattern) {
                    tourney = t.tourneys.link.supplant({link: tourney_link_pattern.supplant({tourney_serial: tourney_serial}), name: tourney_serial});
                }
                html.push(t.tourneys.rows.supplant({id: tourney_serial,
                                tourney: tourney}));
            });
        html.push(t.tourneys.footer);
        if(packet.tourneys.length > 0 || packet.tables.length > 0) {
            html.push(t.challenge.supplant({ 'label': _("Challenge player to a heads up tournament") }));
        }
        return html.join('\n');
    };

    jpoker.plugins.playerLookup.getHTMLForm = function() {
        var t = this.templates;
        var html = [];
        html.push(t.form.supplant({player_lookup: _("Look for player")}));
        return html.join('\n');
    };

    jpoker.plugins.playerLookup.templates = {
        form : '<input class=\'jpoker_player_lookup_input\' type=\'text\'></input><input class=\'jpoker_player_lookup_submit\' type=\'submit\' value=\'{player_lookup}\'></input><div class=\'jpoker_player_lookup_result\'></div>',
        tables : {
            header : '<div class=\'jpoker_player_lookup_tables\'><table><thead><tr><th>{table_title}</th></tr></thead><tbody>',
            rows : '<tr class=\'jpoker_player_lookup_table\' id={id}><td>{table}</td></tr>',
            footer : '</tbody></table></div>',
            link: '<a href=\'{link}\'>{name}</a>'
        },
        tourneys : {
            header : '<div class=\'jpoker_player_lookup_tourneys\'><table><thead><tr><th>{tourney_title}</th></tr></thead><tbody>',
            rows : '<tr class=\'jpoker_player_lookup_tourney\' id={id}><td>{tourney}</td></tr>',
            footer : '</tbody></table></div>',
            link: '<a href=\'{link}\'>{name}</a>'
        },
        challenge: '<div class=\'jpoker_player_lookup_challenge\'><a href=\'javascript://\'>{label}</a></div>'
    };

    jpoker.plugins.playerLookup.callback = {
        error: function(packet) {
        },

        display_done: function(element) {
        }
    };

    //
    // cashier
    //
    jpoker.plugins.cashier = function(url, options) {

        var cashier = jpoker.plugins.cashier;
        var opts = $.extend({}, cashier.defaults, options);
        var server = jpoker.url2server({ url: url });

        return this.each(function() {
                var $this = $(this);

                var id = jpoker.uid();

                $this.append('<div class=\'jpoker_widget jpoker_cashier\' id=\'' + id + '\'></div>');

                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet && packet.type == 'PacketPokerUserInfo') {
                            $(element).html(cashier.getHTML(packet));
                            cashier.callback.display_done(element);
                        }
                        return true;
                    } else {
                        return false;
                    }
                };

                server.registerUpdate(updated, null, 'cashier ' + id);
                server.getUserInfo();

                return this;
            });
    };

    jpoker.plugins.cashier.defaults = $.extend({
        }, jpoker.defaults);

    jpoker.plugins.cashier.getHTML = function(packet) {
        var t = this.templates;
        var html = [];
        html.push(t.currencies.header.supplant({currency_serial_title: _("Currency"),
                        currency_amount_title: _("Amount"),
                        currency_ingame_title: _("In Game"),
                        currency_points_title: _("Points")
                        }));
        $.each(packet.money, function(currency_serial, money) {
                html.push(t.currencies.rows.supplant({currency_serial: currency_serial.substr(1),
                                currency_amount: money[0]/=100,
                                currency_ingame: money[1]/=100,
                                currency_points: money[2]}));
            });
        html.push(t.currencies.footer);
        return html.join('\n');
    };

    jpoker.plugins.cashier.templates = {
        currencies : {
            header : '<div class=\'jpoker_cashier_currencies\'><table><thead><tr><th>{currency_serial_title}</th><th>{currency_amount_title}</th><th>{currency_ingame_title}</th><th>{currency_points_title}</th></tr></thead><tbody>',
            rows : '<tr class=\'jpoker_cashier_currency\'><td>{currency_serial}</td><td>{currency_amount}</td><td>{currency_ingame}</td><td>{currency_points}</td></tr>',
            footer : '</tbody></table></div>'
        }
    };

    jpoker.plugins.cashier.callback = {
        display_done: function(element) {
        }
    };

    //
    // tablepicker
    //
    jpoker.plugins.tablepicker = function(url, options) {

        var server = jpoker.url2server({ url: url });
        var tablepicker = jpoker.plugins.tablepicker;
        var opts = $.extend({}, tablepicker.defaults, options, server.preferences.tablepicker);

        return this.each(function() {
                var $this = $(this);
                var id = jpoker.uid();
                var element = $('<div class=\'jpoker_widget jpoker_tablepicker\' id=\'' + id + '\'></div>').appendTo($this);
                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet) {
                            if ((packet.type == 'PacketPokerTable') &&
                                (packet.reason == 'TablePicker')) {
                                $('.jpoker_tablepicker_error', element).text('');
                                $('.jpoker_tablepicker_error', element).hide();
                            } else if((packet.type == 'PacketPokerError') &&
                                      (packet.other_type == jpoker.packetName2Type.POKER_TABLE_PICKER)) {
                                $('.jpoker_tablepicker_error', element).text(packet.message);
                                $('.jpoker_tablepicker_error', element).show();
                            }
                        }
                        return true;
                    } else {
                        return false;
                    }
                };
                var getOptions = function() {
                    return {variant: $('input[name=variant].jpoker_tablepicker_option', element).val(),
                            betting_structure: $('input[name=betting_structure].jpoker_tablepicker_option ', element).val(),
                            currency_serial: $('input[name=currency_serial].jpoker_tablepicker_option', element).val()
                    };
                };
                opts.id = id;
                $(element).html(jpoker.plugins.tablepicker.template.supplant(opts));
                $('.jpoker_tablepicker_options', element).hide();
                $('.jpoker_tablepicker_error', element).hide();
                $('.jpoker_tablepicker_show_options', element).click(function() {
                        $('.jpoker_tablepicker_options', element).toggle();
                    });
                $('.jpoker_tablepicker_option', element).change(function() {
                        server.preferences.extend({tablepicker: getOptions()});
                    });

                $('.jpoker_tablepicker_submit', element).click(function() {
                        server.tablePick(getOptions());
                    });
                server.registerUpdate(updated, null, 'tablepicker ' + id);
                return this;
            });
    };

    jpoker.plugins.tablepicker.defaults = $.extend({
            variant: '',
            betting_structure: '',
            currency_serial: 0,
            submit_label: _("Play now"),
            show_options_label: _("Toggle options"),
            submit_title: _("Click here to automatically pick a table"),
            variant_label: _("Variant"),
            betting_structure_label: _("Betting structure"),
            currency_serial_label: _("Currency serial")
        }, jpoker.defaults);

    jpoker.plugins.tablepicker.template = '<input class=\'jpoker_tablepicker_submit\' type=\'submit\' value=\'{submit_label}\' title=\'{submit_title}\' /><a class=\'jpoker_tablepicker_show_options\' href=\'javascript://\'>{show_options_label}</a><div class=\'jpoker_tablepicker_options\'><label for=\'jpoker_tablepicker_option_variant{id}\'>{variant_label}</label><input class=\'jpoker_tablepicker_option\' type=\'text\' name=\'variant\' value=\'{variant}\' id=\'jpoker_tablepicker_option_variant{id}\'/><label for=\'jpoker_tablepicker_option_betting_structure{id}\'>{betting_structure_label}</label><input class=\'jpoker_tablepicker_option\' type=\'text\' name=\'betting_structure\' value=\'{betting_structure}\' id=\'jpoker_tablepicker_option_betting_structure{id}\'/><label for=\'jpoker_tablepicker_option_current_serial{id}\'>{currency_serial_label}</label><input class=\'jpoker_tablepicker_option\'type=\'text\' name=\'currency_serial\' value=\'{currency_serial}\' id=\'jpoker_tablepicker_option_current_serial{id}\'/></div><div class=\'jpoker_tablepicker_error\'></div>';

    //
    // signup
    //
    jpoker.plugins.signup = function(url, options) {

        var server = jpoker.url2server({ url: url });
        var signup = jpoker.plugins.signup;
        var opts = $.extend({}, signup.defaults, options, server.preferences.signup);

        return this.each(function() {
                var $this = $(this);
                var id = jpoker.uid();
                var element = $('<div class=\'jpoker_widget jpoker_signup jpoker_jquery_ui\' id=\'' + id + '\'></div>').appendTo($this);
                var updated = function(server, what, packet) {
                    var element = document.getElementById(id);
                    if(element) {
                        if(packet && packet.type == 'PacketPokerPersonalInfo') {
                            $(element).dialog('close');
                            return false;
                        }
                        return true;
                    } else {
                        return false;
                    }
                };
                opts.id = id;
                $(element).html(jpoker.plugins.signup.template.supplant({
                            login_label: _("Login name"),
                                password_label: _("Password"),
                                password_confirmation_label: _("Password confirmation"),
                                email_label: _("Email address"),
                                submit_label: _("Register")
                                }));

                $('input[type=submit]', element).click(function() {
                        var options = {
                            name: $('input[name=login]', element).val(),
                            password: $('input[name=password]', element).val(),
                            password_confirmation: $('input[name=password_confirmation]', element).val(),
                            email: $('input[name=email]', element).val()
                        };
                        server.createAccount(options);
                    });
                server.registerUpdate(updated, null, 'signup ' + id);
                $(element).dialog(opts.dialog);
                return this;
            });
    };

    jpoker.plugins.signup.defaults = $.extend({
            dialog: {
                resizable: false,
                draggable: false,
                modal: true,
                width: '400px',
                height: '300px'
            }
        }, jpoker.defaults);

    jpoker.plugins.signup.template = '<div class=\'jpoker_signup_content\'><dl><dt><label for=\'jpoker_signup_login{id}\'>{login_label}</label></dt><dd><input name=\'login\' type=\'text\' id=\'jpoker_signup_login{id}\'/></dd><dt><label for=\'jpoker_signup_password{id}\'>{password_label}</label></dt><dd><input name=\'password\' type=\'password\' id=\'jpoker_signup_password{id}\'/></dd><dt><label for=\'jpoker_signup_password_confirmation{id}\'>{password_confirmation_label}</label></dt></dt><dd><input name=\'password_confirmation\' type=\'password\' id=\'jpoker_signup_password_confirmation{id}\'/></dd><dt><label for=\'jpoker_signup_email{id}\'>{email_label}</label></dt><dd><input name=\'email\' type=\'text\' id=\'jpoker_signup_email{id}\'/></dd></dl><input type=\'submit\' value=\'{submit_label}\'/></div>';

    //
    // user preferences
    //
    jpoker.preferences = function(hash) {
            var cookie = 'jpoker_preferences_'+hash;
            if ($.cookie(cookie)) {
                $.extend(this, JSON.parse($.cookie(cookie)));
            }
            this.extend = function(preferences) {
                $.extend(this, preferences);
                this.save();
            };
            this.save = function() {
                $.cookie(cookie, JSON.stringify(this));
            };
    };
    jpoker.preferences.prototype = {
        auto_muck_win: true,
        auto_muck_lose: true,
        auto_sitin: true,
        sound: true
    };

    jpoker.compatibility = function(msie) {
        if(msie) {
            jpoker.msie_compatibility();
        } else {
            jpoker.other_compatibility();
        }
    };

    jpoker.compatibility($.browser.msie); // no coverage

    jpoker.copyright_text = jpoker.copyright_template.supplant({ 'jpoker-sources': jpoker.jpoker_sources, 'poker-network-sources': jpoker.poker_network_sources }).supplant({ 'jpoker-version': jpoker.jpoker_version, 'poker-network-version': jpoker.poker_network_version });

})(jQuery);
